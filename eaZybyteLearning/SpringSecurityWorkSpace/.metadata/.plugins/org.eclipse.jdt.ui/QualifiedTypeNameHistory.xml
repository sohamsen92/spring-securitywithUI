<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Component"/>
    <fullyQualifiedTypeName name="com.eazybytes.repository.CustomerRepository"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="org.springframework.security.crypto.password.PasswordEncoder"/>
    <fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.neo4j.Neo4jProperties.Authentication"/>
    <fullyQualifiedTypeName name="javax.persistence.Column"/>
    <fullyQualifiedTypeName name="com.fasterxml.jackson.annotation.JsonIgnore"/>
    <fullyQualifiedTypeName name="javax.persistence.OneToMany"/>
    <fullyQualifiedTypeName name="javax.persistence.FetchType"/>
    <fullyQualifiedTypeName name="javax.persistence.Entity"/>
    <fullyQualifiedTypeName name="javax.persistence.Table"/>
    <fullyQualifiedTypeName name="javax.persistence.GeneratedValue"/>
    <fullyQualifiedTypeName name="javax.persistence.Id"/>
    <fullyQualifiedTypeName name="javax.persistence.GenerationType"/>
    <fullyQualifiedTypeName name="javax.persistence.ManyToOne"/>
    <fullyQualifiedTypeName name="javax.persistence.JoinColumn"/>
    <fullyQualifiedTypeName name="com.eazybytes.model.Customer"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.GrantedAuthority"/>
    <fullyQualifiedTypeName name="com.eazybytes.model.Authority"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.configuration.EnableWebSecurity"/>
    <fullyQualifiedTypeName name="java.nio.charset.Charset"/>
    <fullyQualifiedTypeName name="javax.servlet.http.HttpServletRequest"/>
    <fullyQualifiedTypeName name="javax.servlet.http.HttpServletResponse"/>
    <fullyQualifiedTypeName name="org.springframework.util.StringUtils"/>
    <fullyQualifiedTypeName name="java.util.Base64"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.BadCredentialsException"/>
    <fullyQualifiedTypeName name="com.eazybytes.filter.RequestValidationBeforeFilter"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.authentication.www.BasicAuthenticationFilter"/>
    <fullyQualifiedTypeName name="ch.qos.logback.classic.Logger"/>
    <fullyQualifiedTypeName name="org.slf4j.Logger"/>
    <fullyQualifiedTypeName name="org.apache.logging.log4j.Logger"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.context.SecurityContext"/>
    <fullyQualifiedTypeName name="com.eazybytes.filter.AuthoritiesLoggingAfterFilter"/>
    <fullyQualifiedTypeName name="javax.servlet.Filter"/>
    <fullyQualifiedTypeName name="java.util.logging.Logger"/>
    <fullyQualifiedTypeName name="com.eazybytes.filter.AuthoritiesLoggingAtFilter"/>
    <fullyQualifiedTypeName name="java.util.Arrays"/>
    <fullyQualifiedTypeName name="javax.crypto.SecretKey"/>
    <fullyQualifiedTypeName name="java.nio.charset.StandardCharsets"/>
    <fullyQualifiedTypeName name="java.util.Date"/>
    <fullyQualifiedTypeName name="java.util.HashSet"/>
    <fullyQualifiedTypeName name="java.util.Set"/>
    <fullyQualifiedTypeName name="org.springframework.web.filter.OncePerRequestFilter"/>
    <fullyQualifiedTypeName name="io.jsonwebtoken.security.Keys"/>
    <fullyQualifiedTypeName name="com.eazybytes.constants.SecurityConstants"/>
    <fullyQualifiedTypeName name="io.jsonwebtoken.Jwts"/>
    <fullyQualifiedTypeName name="io.jsonwebtoken.Claims"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.UsernamePasswordAuthenticationToken"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.authority.AuthorityUtils"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.Authentication"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.context.SecurityContextHolder"/>
    <fullyQualifiedTypeName name="java.lang.Override"/>
    <fullyQualifiedTypeName name="com.eazybytes.filter.JWTTokenGeneratorFilter"/>
    <fullyQualifiedTypeName name="com.eazybytes.filter.JWTTokenValidatorFilter"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.security.access.prepost.PreAuthorize"/>
    <fullyQualifiedTypeName name="org.springframework.security.access.prepost.PostAuthorize"/>
    <fullyQualifiedTypeName name="org.springframework.security.access.prepost.PreFilter"/>
    <fullyQualifiedTypeName name="org.springframework.security.access.prepost.PostFilter"/>
</qualifiedTypeNameHistroy>
